-Что является входом для алгоритма Дейкстры, что – результатом работы? 
Орграф G=<V, E> с выделенным источником s, матрица неотрицательных весов A[u, v], u, v E V.

-Какова вычислительная сложность алгоритма?
О(n2)

-Для каких графов алгоритм Дейкстры нельзя использовать?
Алгоритм нельзя использовать для поиска кратчайшего расстояния в графах с отрицательными ребрами

public void dekstra(int graph[][], int src) {
    int v = graph.length;
    int s = src;
    int[] res = new int[v];
    boolean[] visited = new boolean[v];

    for (int i = 0; i < v; i++) {
        res[i] = INF;
        visited[i] = false;
    }
    res[src] = 0;

    while (src != -1) {
        for (int i = 0; i < v; i++)
            if ((graph[src][i] + res[src] < res[i]) && graph[src][i] != 0)
                res[i] = graph[src][i] + res[src];

        visited[src] = true;
        src = -1;
        int mindistance = INF;
        for (int i = 0; i < v; i++)
            if (!visited[i] && (res[i] < mindistance)) {
                src = i;
                mindistance = res[i];
            }
    }

    System.out.println("Vertex Distance from " + s);
    for (int i = 0; i < v; i++)
        System.out.println("to " + i + "\t\t" + res[i]);
}

public void find() {
    int graph[][] = {
            {0, 1, 4, INF, INF},
            {INF, 0, 3, 2, 2},
            {INF, INF, 0, INF, INF},
            {INF, 1, 5, 0, INF},
            {INF, INF, INF, 3, 0}
    };

    dekstra(graph, 0);
}